//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.12.12 at 06:28:20 PM CET 
//


package models.p;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the models.p package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: models.p
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link PatentName }
     * 
     */
    public PatentName createPatentName() {
        return new PatentName();
    }

    /**
     * Create an instance of {@link EarlierApplications }
     * 
     */
    public EarlierApplications createEarlierApplications() {
        return new EarlierApplications();
    }

    /**
     * Create an instance of {@link RequestForPatentRecognition }
     * 
     */
    public RequestForPatentRecognition createRequestForPatentRecognition() {
        return new RequestForPatentRecognition();
    }

    /**
     * Create an instance of {@link PatentInformation }
     * 
     */
    public PatentInformation createPatentInformation() {
        return new PatentInformation();
    }

    /**
     * Create an instance of {@link PatentName.Name }
     * 
     */
    public PatentName.Name createPatentNameName() {
        return new PatentName.Name();
    }

    /**
     * Create an instance of {@link EarlierApplications.EarlierApplication }
     * 
     */
    public EarlierApplications.EarlierApplication createEarlierApplicationsEarlierApplication() {
        return new EarlierApplications.EarlierApplication();
    }

    /**
     * Create an instance of {@link DeliveryType }
     * 
     */
    public DeliveryType createDeliveryType() {
        return new DeliveryType();
    }

    /**
     * Create an instance of {@link InformationForInstitution }
     * 
     */
    public InformationForInstitution createInformationForInstitution() {
        return new InformationForInstitution();
    }

    /**
     * Create an instance of {@link RequestForPatentRecognition.Proxy }
     * 
     */
    public RequestForPatentRecognition.Proxy createRequestForPatentRecognitionProxy() {
        return new RequestForPatentRecognition.Proxy();
    }

    /**
     * Create an instance of {@link RequestForPatentRecognition.DeliveryAddress }
     * 
     */
    public RequestForPatentRecognition.DeliveryAddress createRequestForPatentRecognitionDeliveryAddress() {
        return new RequestForPatentRecognition.DeliveryAddress();
    }

    /**
     * Create an instance of {@link ApplicationInformation }
     * 
     */
    public ApplicationInformation createApplicationInformation() {
        return new ApplicationInformation();
    }

    /**
     * Create an instance of {@link PriorityRightsRecognitionFromEarlierApplications }
     * 
     */
    public PriorityRightsRecognitionFromEarlierApplications createPriorityRightsRecognitionFromEarlierApplications() {
        return new PriorityRightsRecognitionFromEarlierApplications();
    }

    /**
     * Create an instance of {@link Address }
     * 
     */
    public Address createAddress() {
        return new Address();
    }

    /**
     * Create an instance of {@link TLegalEntity }
     * 
     */
    public TLegalEntity createTLegalEntity() {
        return new TLegalEntity();
    }

    /**
     * Create an instance of {@link TIndividual }
     * 
     */
    public TIndividual createTIndividual() {
        return new TIndividual();
    }

    /**
     * Create an instance of {@link PatentInformation.Applicant }
     * 
     */
    public PatentInformation.Applicant createPatentInformationApplicant() {
        return new PatentInformation.Applicant();
    }

    /**
     * Create an instance of {@link PatentInformation.Inventor }
     * 
     */
    public PatentInformation.Inventor createPatentInformationInventor() {
        return new PatentInformation.Inventor();
    }

}
